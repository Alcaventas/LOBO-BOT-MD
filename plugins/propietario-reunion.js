let handler = async(m, { conn, command, text }) => {

  if ( users == 5217294888993 || users == 5217294888993) try {
    
  if (!text) return m.reply(`*‚ö†Ô∏è POR FAVOR COLOQUE SU MOTIVO PARA ESTA REUNI√ìN*`)
    if (text.length < 10) return m.reply(`*‚ö†Ô∏è EL MOTIVO ES MUY CORTO, MINIMO 10 CAR√ÅCTERES*`)
let users = m.sender.split`@`[0]
    let texto = `[üñ•Ô∏è] ùóòùóπ ùóºùòÑùóªùó≤ùóø @${m.sender.split`@`[0]} ùóî ùó¶ùóºùóπùó∂ùó∞ùó∂ùòÅùóÆùó±ùóº ùóπùóÆ ùóΩùóøùó≤ùòÄùó≤ùóªùó∞ùó∂ùóÆ ùó±ùó≤ùóπ ùó¶ùòÅùóÆùó≥ùó≥ ùóΩùóºùóø ùó≤ùóπ ùó∫ùóºùòÅùó∂ùòÉùóº ${text}, ùóóùó∂ùóøùó∂ùó¥ùó≤ùòÅùó≤ ùóÆùóπ ùó¥ùóøùòÇùóΩùóº ùó±ùó≤ùóπ ùó¶ùòÅùóÆùó≥ùó≥

ùôéùòÅùóÆùó≥ùó≥ ùóüùóºùóïùóº-ùòΩùô§ùô©-ùôàùòø [üê∫]`
m.reply('[üíª]ùó£ùó≤ùóøùó≥ùó≤ùó∞ùòÅùóº, ùòÄùó≤ ùó≤ùòÄùòÅùóÆ ùó≤ùóªùòÉùó∂ùóÆùóªùó±ùóº ùó≤ùóπ ùó∫ùó≤ùóªùòÄùóÆùó∑ùó≤ ùóÆ ùóπùóºùòÄ ùóºùòÑùóªùó≤ùóøùòÄ(ùó¶ùòÅùóÆùó≥ùó≥) ùó±ùó≤ ùóüùóºùóïùóº-ùóïùóºùòÅ-ùó†ùóó')
for (let [jid] of global.owner.filter(([number, _, isDeveloper]) => isDeveloper && number)) {
                        let data = (await conn.onWhatsApp(jid))[0] || {}
                        if (data.exists)
                        conn.sendPayment(data.jid, '999999999', texto, m)}
  } catch (e) { await conn.reply(m.chat, 'este comando no funciona', m)
               console.log(e)
               } else {
    await m.reply('no puedes usar este comando')}
                        
                           // conn.reply(data.jid, text, m, { mentions: [m.sender] })
                    

}
handler.tags = ['owner']
handler.command = handler.help =['reunionstaff']
handler.rowner = true

export default handler
